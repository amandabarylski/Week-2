/* Instructions: Style the website you made last week using CSS with the following requirements:

    Use only external CSS file (no internal or inline styling)
    Every element must be styled.
    Create style rules using class, id, and element selectors.

Before beginning the styling process, I adjusted some of the tags in the HTML.
Specifically, I added a main element to each page, removed inline styling, and made the sections with links nav instead.
I also added class and id tags to certain paragraph elements and all images to make it easier to select them individually. */

/*I selected everything to change the font family to one that I found easier to read.*/
* {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

/*I set a darker background color on the body section as it's what I prefer.*/
body {
    background-color: rgb(39, 57, 99);
}

/*I didn't want to go through and delete all the horizontal lines in the HTML files, but they didn't look right on the
styled page so I set their display to none.*/
hr {
    display: none;
}

/*For the top image, I gave it the id "banner" and set its width to 100% so it would grow and shrink with the size
of the browser window.*/
#banner {
    width: 100%;
}

/*To keep the important part of the webpage closer to the center, I set a left and right margin for the main part.*/
main {
    margin-left: 5em;
    margin-right: 5em;
}

/*I centered h1, giving it a lighter text color with a dark shadow. I also gave it some top padding to push the heading
on the home page further away from the banner image.*/
h1 {
    text-align: center;
    color: #a986b3;
    text-shadow: rgb(47, 17, 57) 2px 2px 5px;
    padding-top: 1em;
}

/*I outlined the sections with a dark border and gave them top and bottom margins to separate them from each other.*/
section {
    border: solid rgb(47, 17, 57) 5px;
    border-radius: 5px;
    margin-top: 3px;
    margin-bottom: 3px;
}

/*For h2, I copied the center alignment and text color and shadow from h1, but these headings didn't need padding.*/
h2 {
    text-align: center;
    color: #a986b3;
    text-shadow: rgb(47, 17, 57) 2px 2px 5px;
}

/*I left-aligned the paragraph texts for readability, and gave them margins to push them away from the colored border
of the sections. I gave the text a lighter color that contrasts with the background.*/
p {
    text-align: left;
    margin-left: 2em;
    margin-right: 2em;
    color: rgb(204, 188, 139);
}

/*I placed the images and paragraphs I wanted next to each other into divs that I gave a class titled "side-by-side" and
set the display to flex, which placed them in the same line.*/
.side-by-side {
    display:flex
}

/*For the images in these divs, I wanted to ensure they did not exceed half the screen. I also set a max height, as the
smaller image did not look right taking up half of the space available. I gave these images padding to push them away
from the colored border, and set the margin to auto so that if they were in their own line they would move to the center
of the page instead of staying on the side.*/
div>img {
    max-width: 50%;
    max-height: 400px;
    padding: 6px;
    margin: auto;
}

/*I put the paragraphs I wanted bolded in a class and changed the font weight and text alignment to bold them and place
them in the center of the page.*/
.bolded {
    font-weight: bold;
    text-align: center;
}

/*I gave the nav section a bottom margin to push it away from the footer and centered the text.*/
nav {
    margin-bottom: 2em;
    text-align: center;
}

/*I changed the color of the links to a brighter color and gave them padding to separate them.*/
a {
    color: aquamarine;
    padding: 5px;
}

/*I brightened the color for visited links as well as the default purple was too dark to see clearly on the dark background.*/
:visited {
    color: mediumorchid;
}

/*To visually separate the footer from the rest of the page, I gave it a top border.*/
footer {
    border-top: solid rgb(47, 17, 57) 5px;
}

/*I set the table margin to auto to center it, and added an additional bottom margin so it didn't sit directly on the
section border. I gave it a lighter background color with a darker border that I collapsed.*/
table {
    margin: auto;
    margin-bottom: 1em;
    background-color: #a986b3;
    border-style: solid;
    border-collapse: collapse;
    border-width: 5px;
    border-color: rgb(47, 17, 57);
    border-radius: 3px;
}

/*I gave the table head text a dark blue color better match the blue background of the webpage while still standing out
against the table background.*/
thead {
    color: rgb(24, 35, 55);
}

/*I added padding inside the table head cells to separate the text from the border.*/
table th {
    padding: 2px;
}

/*I gave the table body a darker background color with a lighter text color to distinguish it from the table header.*/
tbody {
    background-color: rgb(47, 17, 57);
    color: rgb(130, 148, 188);
}

/*To give the table internal borders, I gave the cells borders. I also added padding for readability.*/
table td {
    padding: 2px;
    border-style: solid;
    border-color: #a986b3;
}

/*I used a left margin to push the list further from the left side of the screen without fully centering it. As the
bottom bullet point was too close to the border, I added padding. I also had to change the color, selecting the same
color as I did for the paragraph text.*/
ul {
    margin-left: 5em;
    padding-bottom: 1em;
    color: rgb(204, 188, 139);
}

/*To make the bullet points themselves more distinctive, I applied a different light color to them.*/
li::marker {
    color: rgb(130, 148, 188);
}

/*I wanted the list with shorter items centered below the heading, so I gave it a separate id and set the display to
table so that I could use margin: auto to center it. I also changed the bullet points to squares.*/
#symptoms {
    display: table;
    margin: auto;
    list-style-type: square;
}

/*To push the form itself into the center of the page while leaving the elements left-aligned, I set the display type
to table and the margin to auto. I gave it the same lighter text color that I've used throughout the website.*/
form {
    display: table;
    margin: auto;
    color: rgb(204, 188, 139);
}

/*For the input boxes, I wanted the background color to be light blue, and gave them a dark purple border that matches
other elements. I gave them padding to make the text area more distinct.*/
input {
    background-color: rgb(130, 148, 188);
    color: rgb(24, 35, 55);
    padding: 5px;
    border: rgb(47, 17, 57) solid;
    border-radius: 3px;
}

/*For the following section, I began by following W3Schools' tutorial to alter the HTML and make it possible to create my
own checkmarks, then copying and pasting the CSS rather than risking mistyping sections. I then altered elements to fit
the sizing, positioning, and coloring needs that I had. Most notably, I wanted solid borders when unchecked, I wanted
the text size to fit the rest of my website, and I had to shrink the checkboxes and adjust their positioning to match
the smaller text.
Location of the tutorial is https://www.w3schools.com/howto/tryit.asp?filename=tryhow_css_custom_checkbox and it was
helpful, though I had to look up user-select and transform sections as it was demonstrating the functional code
rather than explaining the meaning. I then removed the user-select: none lines as they didn't seem necessary for this
particular list, though the text can still be clicked to mark the checkbox.*/

/* The container */
.container {
    display: block;
    position: relative;
    padding-left: 30px;
    margin-bottom: 10px;
    cursor: pointer;
  }
  
  /* Hide the browser's default checkbox */
  .container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: -2px;
    left: 0;
    height: 18px;
    width: 18px;
    background-color: #a986b3;
    border: rgb(47, 17, 57) solid 3px;
  }
  
  .container input:checked ~ .checkmark {
    background-color: rgb(47, 17, 57);
  }
  
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  .container .checkmark:after {
    left: 6px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid rgb(204, 188, 139);
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }

/*I wanted the submit button centered, and a different color from the other input types, so I selected it and applied
my desired colors. To center it I set the display to block and the margin to auto. After working on the checkmarks,
I decided to change the cursor to a pointer here as I didn't realize before that I could do that.*/
input[type=submit] {
    background-color: rgb(47, 17, 57);
    color: #a986b3;
    padding: 5px;
    border: #a986b3 solid;
    border-radius: 3px;
    cursor: pointer;
    display: block;
    margin: auto;
}

/*As the text and images in the side-by-side sections would squash irregularly on narrower screens, I used a
media query to make it wrap.*/
@media only screen and (max-width: 1100px) {
    .side-by-side {
      display: flex;
      flex-wrap: wrap;
      justify-content: start;
    }
}